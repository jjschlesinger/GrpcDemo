// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_demo.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcDemo {

  /// <summary>Holder for reflection information generated from grpc_demo.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GrpcDemoReflection {

    #region Descriptor
    /// <summary>File descriptor for grpc_demo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcDemoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ncnBjX2RlbW8ucHJvdG8SCEdycGNEZW1vIjoKC0RhdGFSZXF1ZXN0EisK",
            "BnJlY29yZBgBIAMoCzIbLkdycGNEZW1vLkRhdGFSZXF1ZXN0UmVjb3JkIh8K",
            "EURhdGFSZXF1ZXN0UmVjb3JkEgoKAmlkGAEgASgFIjsKDERhdGFSZXNwb25z",
            "ZRIrCgZyZWNvcmQYASADKAsyGy5HcnBjRGVtby5EYXRhUmVwb25zZVJlY29y",
            "ZCIwChFEYXRhUmVwb25zZVJlY29yZBIKCgJpZBgBIAEoBRIPCgdtZXNzYWdl",
            "GAIgASgJMtoCChFEYXRhQWNjZXNzU2VydmljZRI/CgxHZXREYXRhVW5hcnkS",
            "FS5HcnBjRGVtby5EYXRhUmVxdWVzdBoWLkdycGNEZW1vLkRhdGFSZXNwb25z",
            "ZSIAElAKFkdldERhdGFTZXJ2ZXJTdHJlYW1pbmcSFS5HcnBjRGVtby5EYXRh",
            "UmVxdWVzdBobLkdycGNEZW1vLkRhdGFSZXBvbnNlUmVjb3JkIgAwARJRChZH",
            "ZXREYXRhQ2xpZW50U3RyZWFtaW5nEhsuR3JwY0RlbW8uRGF0YVJlcXVlc3RS",
            "ZWNvcmQaFi5HcnBjRGVtby5EYXRhUmVzcG9uc2UiACgBEl8KHUdldERhdGFC",
            "aWRpcmVjdGlvbmFsU3RyZWFtaW5nEhsuR3JwY0RlbW8uRGF0YVJlcXVlc3RS",
            "ZWNvcmQaGy5HcnBjRGVtby5EYXRhUmVwb25zZVJlY29yZCIAKAEwAWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDemo.DataRequest), global::GrpcDemo.DataRequest.Parser, new[]{ "Record" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDemo.DataRequestRecord), global::GrpcDemo.DataRequestRecord.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDemo.DataResponse), global::GrpcDemo.DataResponse.Parser, new[]{ "Record" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDemo.DataReponseRecord), global::GrpcDemo.DataReponseRecord.Parser, new[]{ "Id", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataRequest : pb::IMessage<DataRequest> {
    private static readonly pb::MessageParser<DataRequest> _parser = new pb::MessageParser<DataRequest>(() => new DataRequest());
    public static pb::MessageParser<DataRequest> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDemo.GrpcDemoReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DataRequest(DataRequest other) : this() {
      record_ = other.record_.Clone();
    }

    public DataRequest Clone() {
      return new DataRequest(this);
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcDemo.DataRequestRecord> _repeated_record_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcDemo.DataRequestRecord.Parser);
    private readonly pbc::RepeatedField<global::GrpcDemo.DataRequestRecord> record_ = new pbc::RepeatedField<global::GrpcDemo.DataRequestRecord>();
    public pbc::RepeatedField<global::GrpcDemo.DataRequestRecord> Record {
      get { return record_; }
    }

    public override bool Equals(object other) {
      return Equals(other as DataRequest);
    }

    public bool Equals(DataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!record_.Equals(other.record_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= record_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      record_.WriteTo(output, _repeated_record_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += record_.CalculateSize(_repeated_record_codec);
      return size;
    }

    public void MergeFrom(DataRequest other) {
      if (other == null) {
        return;
      }
      record_.Add(other.record_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataRequestRecord : pb::IMessage<DataRequestRecord> {
    private static readonly pb::MessageParser<DataRequestRecord> _parser = new pb::MessageParser<DataRequestRecord>(() => new DataRequestRecord());
    public static pb::MessageParser<DataRequestRecord> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDemo.GrpcDemoReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DataRequestRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DataRequestRecord(DataRequestRecord other) : this() {
      id_ = other.id_;
    }

    public DataRequestRecord Clone() {
      return new DataRequestRecord(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DataRequestRecord);
    }

    public bool Equals(DataRequestRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      return size;
    }

    public void MergeFrom(DataRequestRecord other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataResponse : pb::IMessage<DataResponse> {
    private static readonly pb::MessageParser<DataResponse> _parser = new pb::MessageParser<DataResponse>(() => new DataResponse());
    public static pb::MessageParser<DataResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDemo.GrpcDemoReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DataResponse(DataResponse other) : this() {
      record_ = other.record_.Clone();
    }

    public DataResponse Clone() {
      return new DataResponse(this);
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcDemo.DataReponseRecord> _repeated_record_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcDemo.DataReponseRecord.Parser);
    private readonly pbc::RepeatedField<global::GrpcDemo.DataReponseRecord> record_ = new pbc::RepeatedField<global::GrpcDemo.DataReponseRecord>();
    public pbc::RepeatedField<global::GrpcDemo.DataReponseRecord> Record {
      get { return record_; }
    }

    public override bool Equals(object other) {
      return Equals(other as DataResponse);
    }

    public bool Equals(DataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!record_.Equals(other.record_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= record_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      record_.WriteTo(output, _repeated_record_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += record_.CalculateSize(_repeated_record_codec);
      return size;
    }

    public void MergeFrom(DataResponse other) {
      if (other == null) {
        return;
      }
      record_.Add(other.record_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DataReponseRecord : pb::IMessage<DataReponseRecord> {
    private static readonly pb::MessageParser<DataReponseRecord> _parser = new pb::MessageParser<DataReponseRecord>(() => new DataReponseRecord());
    public static pb::MessageParser<DataReponseRecord> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDemo.GrpcDemoReflection.Descriptor.MessageTypes[3]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DataReponseRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DataReponseRecord(DataReponseRecord other) : this() {
      id_ = other.id_;
      message_ = other.message_;
    }

    public DataReponseRecord Clone() {
      return new DataReponseRecord(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DataReponseRecord);
    }

    public bool Equals(DataReponseRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    public void MergeFrom(DataReponseRecord other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
